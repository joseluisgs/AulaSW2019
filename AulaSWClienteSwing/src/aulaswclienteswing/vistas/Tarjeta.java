/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aulaswclienteswing.vistas;

import aulaswclienteswing.modelo.Coordenada;
import aulaswclienteswing.modelo.TablaTarjetaModel;
import aulaswclienteswing.modelo.Usuario;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import java.awt.Desktop;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author link
 */
public class Tarjeta extends javax.swing.JFrame {

    private javax.swing.JFrame anterior;
    private Usuario usuario;

    private TablaTarjetaModel tablaTarjetaModel = new TablaTarjetaModel();

    public void setAnterior(javax.swing.JFrame anterior) {
        this.anterior = anterior;
    }

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
        this.setTitle("Tarjeta de Coordenadas de: " + this.usuario.getNombre());

    }

    public void iniciarComponentes() {
        cargarTablaTarjeta();
    }

    /**
     * Creates new form Tarjeta
     */
    public Tarjeta() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaTarjeta = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setTitle("Tarjeta de Coordenadas");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        tablaTarjeta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaTarjeta);

        jButton1.setText("Imprimir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Volver");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        volver();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        volver();
    }//GEN-LAST:event_formWindowClosing

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        imprimir();
    }//GEN-LAST:event_jButton1ActionPerformed
    private void volver() {
        // TODO add your handling code here:
        this.anterior.setVisible(true);
        this.dispose();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tarjeta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tarjeta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tarjeta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tarjeta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tarjeta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaTarjeta;
    // End of variables declaration//GEN-END:variables

    private void cargarTablaTarjeta() {
        this.tablaTarjetaModel = new TablaTarjetaModel();
        tablaTarjeta.setRowSelectionAllowed(true);
        this.tablaTarjeta.setModel(tablaTarjetaModel);
        this.tablaTarjetaModel.setFila(listaTarjeta());
        //System.out.println(this.usuario.toString());
    }

    private ArrayList<Coordenada> listaTarjeta() {
        // System.out.println(this.usuario.toString());
        ArrayList<Coordenada> lista = new ArrayList<Coordenada>();

        String result = this.tarjeta(this.usuario.getId());

        JsonParser parser = new JsonParser();
        JsonArray gsonArr = parser.parse(result).getAsJsonArray();
        if (gsonArr.size() != 0) {

            for (JsonElement obj : gsonArr) {
                JsonObject gsonObj = obj.getAsJsonObject();
                Coordenada c = new Coordenada(gsonObj.get("clave").getAsInt(), gsonObj.get("valor").getAsString());
                lista.add(c);
            }
        }
        return lista;
    }

    private static String tarjeta(int id) {
        org.me.aulaservicio.Aulaservicio_Service service = new org.me.aulaservicio.Aulaservicio_Service();
        org.me.aulaservicio.Aulaservicio port = service.getAulaservicioPort();
        return port.tarjeta(id);
    }

    private void imprimir() {
        // Primero es obtener la ruta del fichero a guardar con un elemento de la interfaz
        JFileChooser elegirRuta = new JFileChooser();
        elegirRuta.setDialogTitle("Indica el nombre del Fichero");
        FileNameExtensionFilter filtroFichero = new FileNameExtensionFilter("TXT", "txt");
        elegirRuta.setFileFilter(filtroFichero);
        int seleccion = elegirRuta.showSaveDialog(this);
        // Si pulsa guardar o aceptar
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File fichero = elegirRuta.getSelectedFile();
            //System.out.println("fichero " + fichero.getAbsolutePath());
            escribirFichero(fichero);
            // guardamos el fichero como sabemos
            imprimirFichero(fichero);

        }
    }

    private void escribirFichero(File file) {
        File fichero = file; // no hace falta pero asi uso la funcion directa que vimos en clase
        PrintWriter f = null;
        try {
            //System.out.println("Escribiendo en el fichero:"+fichero.getAbsolutePath());
            f = new PrintWriter(new FileWriter(fichero));
            f.println("Tarjeta de Coordenadas\n");
            for (int i = 0; i < tablaTarjeta.getRowCount(); i++) {
                f.println(tablaTarjeta.getValueAt(i, 0).toString() + "\t" + tablaTarjeta.getValueAt(i, 1).toString());

            }

        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error al salvar", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                // Nuevamente aprovechamos el finally para 
                // asegurarnos que se cierra el fichero.
                if (f != null) {
                    f.close();
                }
                JOptionPane.showMessageDialog(null, "Fichero: " + fichero.getName() + " guardado con éxito", "Fichero guardado", JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception e2) {
                JOptionPane.showMessageDialog(null, e2.getMessage(), "Error al salvar", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void imprimirFichero(File file) {
        Desktop app = Desktop.getDesktop();
        try {
            app.edit(file); // Se puede poner el método print, o mandarlo por correo, etc. Aquí lo dejo
            //app.mail();
            //app.browse(new URI("https://www.google.es/search?q=uri"));
            //app.print(new File("prueba.txt"));
        } catch (Exception e) {
            System.err.println(e);
        }
    }
}
